import Phaser from 'phaser';
import { CardContainer } from '../types';

export default class OrderEventsScene extends Phaser.Scene {
  private slots!: Phaser.GameObjects.Zone[];
  private cards!: CardContainer[];
  private correctOrder = ['1', '2', '3', '4'];
  private gameComplete = false;
  private lessonData: any = null;
  private validateButton: Phaser.GameObjects.Container | null = null;
  private cardCount = 4;
  private storySteps = [
    'Dieu parle √† Jonas',
    'Jonas fuit en bateau',
    'Dans le ventre du poisson', 
    'Jonas ob√©it et pr√™che'
  ];
  
  // Versions courtes pour les cartes
  private shortStorySteps = [
    'Dieu parle\n√† Jonas',
    'Jonas fuit\nen bateau',
    'Dans le ventre\ndu poisson', 
    'Jonas ob√©it\net pr√™che'
  ];

  constructor() {
    super('OrderEvents');
  }


  public setLessonData(data: any) {
    this.lessonData = data;
    console.log('üìö SetLessonData appel√© avec:', data?.id || 'pas de data');
    console.log('üìö Donn√©es compl√®tes:', data);
    
    // Adapter les √©tapes selon la le√ßon
    if (data && data.id) {
      switch (data.id) {
        case 'jonas_01':
          this.storySteps = [
            'Dieu parle √† Jonas',
            'Jonas fuit en bateau',
            'Dans le ventre du poisson',
            'Jonas ob√©it et pr√™che'
          ];
          this.shortStorySteps = [
            'Dieu parle\n√† Jonas',
            'Jonas fuit\nen bateau',
            'Dans le ventre\ndu poisson',
            'Jonas ob√©it\net pr√™che'
          ];
          break;
        case 'jonas_02_fuite':
          this.storySteps = [
            'Dieu donne la mission',
            'Jonas refuse et fuit',
            'Temp√™te sur la mer',
            'Jonas jet√© √† la mer'
          ];
          this.shortStorySteps = [
            'Dieu donne\nla mission',
            'Jonas refuse\net fuit',
            'Temp√™te\nsur la mer',
            'Jonas jet√©\n√† la mer'
          ];
          break;
        case 'jonas_03_ninive':
          this.storySteps = [
            'Jonas pr√™che √† Ninive',
            'Les habitants se repentent',
            'Le roi ordonne le je√ªne',
            'Dieu pardonne la ville'
          ];
          this.shortStorySteps = [
            'Jonas pr√™che\n√† Ninive',
            'Les habitants\nse repentent',
            'Le roi ordonne\nle je√ªne',
            'Dieu pardonne\nla ville'
          ];
          break;
        case 'jonas_04_ricin':
          this.storySteps = [
            'Jonas attend dehors',
            'Dieu fait pousser le ricin',
            'Un ver d√©truit le ricin',
            'Le√ßon de mis√©ricorde'
          ];
          this.shortStorySteps = [
            'Jonas attend\ndehors',
            'Dieu fait pousser\nle ricin',
            'Un ver d√©truit\nle ricin',
            'Le√ßon de\nmis√©ricorde'
          ];
          break;
        case 'daniel_01':
          this.storySteps = [
            'Daniel prie fid√®lement',
            'Les jaloux le d√©noncent',
            'Daniel jet√© aux lions',
            'Dieu ferme leur gueule'
          ];
          this.shortStorySteps = [
            'Daniel prie\nfid√®lement',
            'Les jaloux\nle d√©noncent',
            'Daniel jet√©\naux lions',
            'Dieu ferme\nleur gueule'
          ];
          break;
        case 'david_01':
          this.storySteps = [
            'Goliath d√©fie Isra√´l',
            'David se porte volontaire',
            'David lance sa pierre',
            'Goliath tombe, victoire !'
          ];
          this.shortStorySteps = [
            'Goliath d√©fie\nIsra√´l',
            'David se porte\nvolontaire',
            'David lance\nsa pierre',
            'Goliath tombe\nvictoire !'
          ];
          break;
        case 'creation_01':
          this.storySteps = [
            'Dieu s√©pare lumi√®re et t√©n√®bres',
            'Dieu cr√©a la terre et les mers',
            'Dieu cr√©a les plantes et animaux',
            'Dieu cr√©a l\'homme et la femme'
          ];
          this.shortStorySteps = [
            'Dieu s√©pare\nlumi√®re/t√©n√®bres',
            'Dieu cr√©a terre\net mers',
            'Dieu cr√©a plantes\net animaux',
            'Dieu cr√©a homme\net femme'
          ];
          break;
        case 'moise_01':
          this.storySteps = [
            'Le peuple d\'Isra√´l est esclave en √âgypte',
            'Mo√Øse re√ßoit la mission de Dieu',
            'Les dix plaies d\'√âgypte',
            'La travers√©e de la mer Rouge'
          ];
          this.shortStorySteps = [
            'Le peuple d\'Isra√´l\nest esclave en √âgypte',
            'Mo√Øse re√ßoit\nla mission de Dieu',
            'Les dix plaies\nd\'√âgypte',
            'La travers√©e\nde la mer Rouge'
          ];
          break;
        case 'noe_01':
          this.storySteps = [
            'Dieu voit le mal sur la terre',
            'No√© construit l\'arche',
            'Le d√©luge recouvre la terre',
            'L\'alliance et l\'arc-en-ciel'
          ];
          this.shortStorySteps = [
            'Dieu voit le mal\nsur la terre',
            'No√© construit\nl\'arche',
            'Le d√©luge recouvre\nla terre',
            'L\'alliance et\nl\'arc-en-ciel'
          ];
          break;
        case 'babel_01':
          this.storySteps = [
            'Tous parlent la m√™me langue',
            'Ils d√©cident de construire une tour',
            'Dieu confond leur langage',
            'Ils se dispersent sur la terre'
          ];
          this.shortStorySteps = [
            'Tous parlent\nla m√™me langue',
            'Ils d√©cident de\nconstruire une tour',
            'Dieu confond\nleur langage',
            'Ils se dispersent\nsur la terre'
          ];
          break;
        case 'abraham_01':
          this.storySteps = [
            'Dieu appelle Abram',
            'Abram quitte son pays',
            'Dieu promet une grande nation',
            'Abraham re√ßoit Isaac'
          ];
          this.shortStorySteps = [
            'Dieu appelle\nAbram',
            'Abram quitte\nson pays',
            'Dieu promet\nune grande nation',
            'Abraham re√ßoit\nIsaac'
          ];
          break;
        case 'isaac_01':
          this.storySteps = [
            'Abraham envoie son serviteur',
            'Le serviteur va en M√©sopotamie',
            'Rebecca puise de l\'eau au puits',
            'Isaac et Rebecca se marient'
          ];
          this.shortStorySteps = [
            'Abraham envoie\nson serviteur',
            'Le serviteur va\nen M√©sopotamie',
            'Rebecca puise\nde l\'eau au puits',
            'Isaac et Rebecca\nse marient'
          ];
          break;
        case 'jacob_01':
          this.storySteps = [
            'Naissance des jumeaux Jacob et √âsa√º',
            '√âsa√º vend son droit d\'a√Ænesse',
            'Jacob re√ßoit la b√©n√©diction d\'Isaac',
            'Jacob et √âsa√º se r√©concilient'
          ];
          this.shortStorySteps = [
            'Naissance des\njumeaux Jacob et √âsa√º',
            '√âsa√º vend son\ndroit d\'a√Ænesse',
            'Jacob re√ßoit la\nb√©n√©diction d\'Isaac',
            'Jacob et √âsa√º\nse r√©concilient'
          ];
          break;
        case 'joseph_01':
          this.storySteps = [
            'Joseph est aim√© de son p√®re',
            'Ses fr√®res le vendent en √âgypte',
            'Joseph interpr√®te les r√™ves du pharaon',
            'Joseph pardonne √† ses fr√®res'
          ];
          this.shortStorySteps = [
            'Joseph est aim√©\nde son p√®re',
            'Ses fr√®res le\nvendent en √âgypte',
            'Joseph interpr√®te\nles r√™ves du pharaon',
            'Joseph pardonne\n√† ses fr√®res'
          ];
          break;
        case 'commandements_01':
          this.storySteps = [
            'Mo√Øse monte sur le mont Sina√Ø',
            'Dieu parle au milieu du tonnerre et du feu',
            'Dieu donne les dix commandements',
            'Les commandements sont grav√©s sur des tables de pierre'
          ];
          this.shortStorySteps = [
            'Mo√Øse monte sur\nle mont Sina√Ø',
            'Dieu parle au milieu\ndu tonnerre et du feu',
            'Dieu donne les\ndix commandements',
            'Les commandements\nsont grav√©s sur des\ntables de pierre'
          ];
          break;
        case 'gedeon_01':
          this.storySteps = [
            'Les Madianites oppriment Isra√´l',
            'Dieu choisit G√©d√©on pour d√©livrer le peuple',
            'Dieu demande √† G√©d√©on de garder seulement 300 hommes',
            'G√©d√©on et ses hommes attaquent avec des trompettes et des torches'
          ];
          this.shortStorySteps = [
            'Les Madianites\noppriment Isra√´l',
            'Dieu choisit G√©d√©on\npour d√©livrer le peuple',
            'Dieu demande √† G√©d√©on\nde garder seulement\n300 hommes',
            'G√©d√©on et ses hommes\nattaquent avec des\ntrompettes et des torches'
          ];
          break;
        case 'josue_01':
          this.storySteps = [
            'Josu√© re√ßoit ses instructions',
            'Six jours de marche silencieuse',
            'Septi√®me jour : sept tours',
            'Cris et chute des murailles'
          ];
          this.shortStorySteps = [
            'Josu√© re√ßoit\nses instructions',
            'Six jours\nde marche',
            'Septi√®me jour\nsept tours',
            'Cris et chute\ndes murailles'
          ];
          break;
        case 'adam_eve_01':
          this.storySteps = [
            'Dieu place Adam et √àve en √âden',
            'Le serpent tente √àve',
            '√àve et Adam mangent le fruit',
            'Dieu les confronte et les chasse'
          ];
          this.shortStorySteps = [
            'Dieu place Adam\net √àve en √âden',
            'Le serpent\ntente √àve',
            '√àve et Adam\nmangent le fruit',
            'Dieu les confronte\net les chasse'
          ];
          console.log('üçé √âtapes Adam et √àve d√©finies:', this.storySteps);
          break;
        case 'moise_buisson_01':
          this.storySteps = [
            'Mo√Øse garde les troupeaux dans le d√©sert',
            'Il voit un buisson en feu qui ne se consume pas',
            'Dieu l\'appelle et lui dit d\'√¥ter ses sandales',
            'Dieu se r√©v√®le comme JE SUIS et envoie Mo√Øse en √âgypte'
          ];
          this.shortStorySteps = [
            'Mo√Øse garde les\ntroupeaux dans le d√©sert',
            'Il voit un buisson\nen feu qui ne se\nconsume pas',
            'Dieu l\'appelle et lui\ndit d\'√¥ter ses sandales',
            'Dieu se r√©v√®le comme\nJE SUIS et envoie\nMo√Øse en √âgypte'
          ];
          console.log('üî• √âtapes Mo√Øse et le buisson ardent d√©finies:', this.storySteps);
          break;
        case 'plaies_egypte_01':
          this.storySteps = [
            'Mo√Øse et Aaron demandent √† Pharaon de lib√©rer Isra√´l',
            'Pharaon refuse et Dieu envoie les premi√®res plaies',
            'Les plaies s\'intensifient : gr√™le, sauterelles, t√©n√®bres',
            'La mort des premiers-n√©s brise enfin Pharaon'
          ];
          this.shortStorySteps = [
            'Mo√Øse et Aaron\ndemandent √† Pharaon\nde lib√©rer Isra√´l',
            'Pharaon refuse et Dieu\nenvoie les premi√®res\nplaies',
            'Les plaies s\'intensifient :\ngr√™le, sauterelles,\nt√©n√®bres',
            'La mort des premiers-n√©s\nbrise enfin Pharaon'
          ];
          console.log('üê∏ √âtapes Les dix plaies d\'√âgypte d√©finies:', this.storySteps);
          break;
        case 'mer_rouge_01':
          this.storySteps = [
            'Les Isra√©lites sont poursuivis par l\'arm√©e de Pharaon',
            'Le peuple a peur mais Mo√Øse dit : "Ne craignez rien"',
            'Mo√Øse √©tend sa main et Dieu s√©pare les eaux de la mer',
            'Les Isra√©lites traversent √† pied sec, les √âgyptiens sont engloutis'
          ];
          this.shortStorySteps = [
            'Les Isra√©lites sont\npoursuivis par l\'arm√©e\nde Pharaon',
            'Le peuple a peur mais\nMo√Øse dit : "Ne\ncraignez rien"',
            'Mo√Øse √©tend sa main et\nDieu s√©pare les eaux\nde la mer',
            'Les Isra√©lites traversent\n√† pied sec, les √âgyptiens\nsont engloutis'
          ];
          console.log('üåä √âtapes La travers√©e de la mer Rouge d√©finies:', this.storySteps);
          break;
        case 'samson_01':
          this.storySteps = [
            'Samson est choisi par Dieu pour d√©livrer Isra√´l des Philistins',
            'Il fait de grands exploits gr√¢ce √† sa force divine',
            'Il tombe amoureux de Dalila qui d√©couvre son secret',
            'Ses cheveux sont coup√©s, il perd sa force et meurt en h√©ros'
          ];
          this.shortStorySteps = [
            'Samson est choisi par Dieu\npour d√©livrer Isra√´l\ndes Philistins',
            'Il fait de grands exploits\ngr√¢ce √† sa force divine',
            'Il tombe amoureux de Dalila\nqui d√©couvre son secret',
            'Ses cheveux sont coup√©s, il\nperd sa force et meurt\nen h√©ros'
          ];
          console.log('üí™ √âtapes Samson et Dalila d√©finies:', this.storySteps);
          break;
        case 'salomon_01':
          this.storySteps = [
            'Salomon demande la sagesse √† Dieu pour gouverner le peuple',
            'Dieu exauce sa pri√®re et lui donne une sagesse reconnue dans le monde',
            'Salomon fait construire un magnifique Temple √† J√©rusalem',
            'L\'arche de l\'alliance est plac√©e dans le Temple et la gloire de Dieu le remplit'
          ];
          this.shortStorySteps = [
            'Salomon demande la sagesse\n√† Dieu pour gouverner\nle peuple',
            'Dieu exauce sa pri√®re et\nlui donne une sagesse\nreconnue dans le monde',
            'Salomon fait construire un\nmagnifique Temple\n√† J√©rusalem',
            'L\'arche de l\'alliance est\nplac√©e dans le Temple et\nla gloire de Dieu le remplit'
          ];
          console.log('üëë √âtapes Salomon et le Temple d√©finies:', this.storySteps);
          break;
        case 'elie_01':
          this.storySteps = [
            '√âlie rassemble le peuple sur le mont Carmel pour un d√©fi',
            'Les proph√®tes de Baal crient et dansent toute la journ√©e sans r√©sultat',
            '√âlie arrose le bois d\'eau et prie Dieu',
            'Le feu du ciel tombe et consume le sacrifice, et le peuple reconna√Æt Dieu'
          ];
          this.shortStorySteps = [
            '√âlie rassemble le peuple\nsur le mont Carmel\npour un d√©fi',
            'Les proph√®tes de Baal crient\net dansent toute la journ√©e\nsans r√©sultat',
            '√âlie arrose le bois d\'eau\net prie Dieu',
            'Le feu du ciel tombe et\nconsume le sacrifice, et le\npeuple reconna√Æt Dieu'
          ];
          console.log('üî• √âtapes √âlie et les proph√®tes de Baal d√©finies:', this.storySteps);
          break;
        case 'ezechiel_01':
          this.storySteps = [
            'Dieu transporte √âz√©chiel dans une vall√©e d\'ossements dess√©ch√©s',
            'Dieu demande √† √âz√©chiel si ces os peuvent revivre',
            '√âz√©chiel proph√©tise et les os se rapprochent, la chair et la peau se forment',
            'L\'esprit de Dieu entre en eux et ils deviennent une arm√©e vivante'
          ];
          this.shortStorySteps = [
            'Dieu transporte √âz√©chiel\ndans une vall√©e\nd\'ossements dess√©ch√©s',
            'Dieu demande √† √âz√©chiel\nsi ces os peuvent\nrevivre',
            '√âz√©chiel proph√©tise et les os\nse rapprochent, la chair\net la peau se forment',
            'L\'esprit de Dieu entre en eux\net ils deviennent une\narm√©e vivante'
          ];
          console.log('üí® √âtapes √âz√©chiel et les ossements dess√©ch√©s d√©finies:', this.storySteps);
          break;
        case 'naissance_jesus':
          this.storySteps = [
            'L\'ange Gabriel annonce √† Marie qu\'elle aura un enfant par l\'Esprit Saint',
            'Marie accepte la volont√© de Dieu avec foi',
            'Joseph prend Marie chez lui apr√®s que l\'ange lui soit apparu en r√™ve',
            'Marie et Joseph vont √† Bethl√©hem pour le recensement de C√©sar',
            'J√©sus na√Æt dans une √©table faute de place √† l\'auberge',
            'Des bergers re√ßoivent l\'annonce de la naissance par un ange',
            'Une √©toile guide des mages d\'Orient vers J√©sus'
          ];
          this.shortStorySteps = [
            'L\'ange Gabriel annonce\n√† Marie qu\'elle aura\nun enfant par l\'Esprit Saint',
            'Marie accepte la volont√©\nde Dieu avec foi',
            'Joseph prend Marie chez lui\napr√®s que l\'ange lui soit\napparu en r√™ve',
            'Marie et Joseph vont\n√† Bethl√©hem pour le\nrecensement de C√©sar',
            'J√©sus na√Æt dans une √©table\nfaute de place √†\nl\'auberge',
            'Des bergers re√ßoivent\nl\'annonce de la naissance\npar un ange',
            'Une √©toile guide des mages\nd\'Orient vers J√©sus'
          ];
          console.log('üë∂ √âtapes Naissance de J√©sus d√©finies:', this.storySteps);
          break;

        case 'enfance_jesus':
          this.storySteps = [
            'Marie et Joseph vont √† J√©rusalem pour la f√™te de la P√¢que avec J√©sus',
            'Apr√®s la f√™te, ils repartent mais J√©sus reste √† J√©rusalem',
            'Ils pensent qu\'il est avec d\'autres voyageurs et font une journ√©e de chemin',
            'Ils le cherchent parmi leurs parents et connaissances sans le trouver',
            'Ils retournent √† J√©rusalem pour le chercher',
            'Au bout de trois jours, ils le trouvent dans le temple',
            'J√©sus √©coute les docteurs et pose des questions, √©tonnant tous par son intelligence',
            'J√©sus r√©pond qu\'il faut qu\'il s\'occupe des affaires de son P√®re'
          ];
          this.shortStorySteps = [
            'Marie et Joseph vont\n√† J√©rusalem pour la f√™te\nde la P√¢que avec J√©sus',
            'Apr√®s la f√™te, ils repartent\nmais J√©sus reste\n√† J√©rusalem',
            'Ils pensent qu\'il est avec\nd\'autres voyageurs et font\nune journ√©e de chemin',
            'Ils le cherchent parmi leurs\nparents et connaissances\nsans le trouver',
            'Ils retournent √† J√©rusalem\npour le chercher',
            'Au bout de trois jours,\nils le trouvent dans\nle temple',
            'J√©sus √©coute les docteurs\net pose des questions,\n√©tonnant tous par son intelligence',
            'J√©sus r√©pond qu\'il faut\nqu\'il s\'occupe des affaires\nde son P√®re'
          ];
          console.log('üßí √âtapes L\'enfance de J√©sus d√©finies:', this.storySteps);
          break;

        case 'bapteme_jesus':
          this.storySteps = [
            'Jean-Baptiste pr√™che dans le d√©sert, appelant √† la repentance',
            'J√©sus vient de Galil√©e pour √™tre baptis√© par Jean',
            'Jean h√©site, disant qu\'il a besoin d\'√™tre baptis√© par J√©sus',
            'J√©sus insiste, expliquant que c\'est n√©cessaire pour accomplir toute la justice',
            'J√©sus est baptis√© par Jean dans l\'eau',
            'Lorsque J√©sus sort de l\'eau, les cieux s\'ouvrent',
            'L\'Esprit de Dieu descend sur lui comme une colombe',
            'Une voix du ciel dit : ¬´ Celui-ci est mon Fils bien-aim√© ¬ª'
          ];
          this.shortStorySteps = [
            'Jean-Baptiste pr√™che\ndans le d√©sert, appelant\n√† la repentance',
            'J√©sus vient de Galil√©e\npour √™tre baptis√©\npar Jean',
            'Jean h√©site, disant qu\'il a\nbesoin d\'√™tre baptis√©\npar J√©sus',
            'J√©sus insiste, expliquant\nque c\'est n√©cessaire pour\naccomplir toute la justice',
            'J√©sus est baptis√© par Jean\ndans l\'eau',
            'Lorsque J√©sus sort de l\'eau,\nles cieux s\'ouvrent',
            'L\'Esprit de Dieu descend\nsur lui comme une colombe',
            'Une voix du ciel dit :\n¬´ Celui-ci est mon Fils bien-aim√© ¬ª'
          ];
          console.log('üí¶ √âtapes Le bapt√™me de J√©sus d√©finies:', this.storySteps);
          break;

        case 'tentations_jesus':
          this.storySteps = [
            'Apr√®s son bapt√™me, J√©sus est conduit par l\'Esprit dans le d√©sert',
            'J√©sus je√ªne quarante jours et quarante nuits, apr√®s quoi il a faim',
            'Le diable s\'approche et lui dit : ¬´ Si tu es Fils de Dieu, ordonne que ces pierres deviennent des pains ¬ª',
            'J√©sus r√©pond : ¬´ L\'homme ne vivra pas de pain seulement, mais de toute parole qui sort de la bouche de Dieu ¬ª',
            'Le diable transporte J√©sus sur le haut du temple et le tente de se jeter en bas',
            'J√©sus r√©pond : ¬´ Tu ne tenteras point le Seigneur, ton Dieu ¬ª',
            'Le diable montre √† J√©sus tous les royaumes du monde et leur gloire',
            'J√©sus r√©pond : ¬´ Retire-toi, Satan ! Tu adoreras le Seigneur, ton Dieu, et tu le serviras lui seul ¬ª',
            'Le diable laisse J√©sus, et des anges viennent le servir'
          ];
          this.shortStorySteps = [
            'Apr√®s son bapt√™me, J√©sus est\nconduit par l\'Esprit\ndans le d√©sert',
            'J√©sus je√ªne quarante jours\net quarante nuits,\napr√®s quoi il a faim',
            'Le diable s\'approche et lui dit :\n¬´ Si tu es Fils de Dieu,\nordonne que ces pierres deviennent des pains ¬ª',
            'J√©sus r√©pond : ¬´ L\'homme ne vivra pas\nde pain seulement, mais de toute\nparole qui sort de la bouche de Dieu ¬ª',
            'Le diable transporte J√©sus\nsur le haut du temple\net le tente de se jeter en bas',
            'J√©sus r√©pond : ¬´ Tu ne tenteras point\nle Seigneur, ton Dieu ¬ª',
            'Le diable montre √† J√©sus\ntous les royaumes du monde\net leur gloire',
            'J√©sus r√©pond : ¬´ Retire-toi, Satan !\nTu adoreras le Seigneur, ton Dieu,\net tu le serviras lui seul ¬ª',
            'Le diable laisse J√©sus,\net des anges viennent le servir'
          ];
          console.log('üòà √âtapes Les tentations de J√©sus d√©finies:', this.storySteps);
          break;
        default:
          // Utiliser les √©tapes Jonas par d√©faut
          this.storySteps = [
            'Dieu parle √† Jonas',
            'Jonas fuit en bateau',
            'Dans le ventre du poisson',
            'Jonas ob√©it et pr√™che'
          ];
          this.shortStorySteps = [
            'Dieu parle\n√† Jonas',
            'Jonas fuit\nen bateau',
            'Dans le ventre\ndu poisson',
            'Jonas ob√©it\net pr√™che'
          ];
          break;
      }
      
      // Mettre √† jour les cartes si elles existent d√©j√†
      if (this.cards && this.cards.length > 0) {
        this.updateCardsAfterLessonDataChange();
      }
    }
  }

  private updateCardsAfterLessonDataChange() {
    // Mettre √† jour le texte de chaque carte selon les nouvelles donn√©es
    this.cards.forEach((card, index) => {
      const frontNumber = (card as any).frontNumber;
      if (frontNumber && this.shortStorySteps[index]) {
        frontNumber.setText(this.shortStorySteps[index]);
      }
    });
  }

  preload() {
    // Cr√©er des textures color√©es au lieu de charger des images
    this.createColorTextures();
  }

  private createColorTextures() {
    const graphics = this.add.graphics();
    
    // Cr√©er 6 cartes color√©es diff√©rentes (pour tous les niveaux de difficult√©)
    const colors = [0x3B82F6, 0x10B981, 0xF59E0B, 0xEF4444, 0x8B5CF6, 0x06B6D4];
    
    for (let i = 1; i <= 6; i++) {
      graphics.clear();
      graphics.fillStyle(colors[i - 1], 1);
      graphics.fillRoundedRect(0, 0, 120, 160, 10);
      
      // Ajouter une bordure
      graphics.lineStyle(3, 0xffffff, 1);
      graphics.strokeRoundedRect(0, 0, 120, 160, 10);
      
      graphics.generateTexture(`card${i}`, 120, 160);
    }
    
    // Cr√©er texture de background
    graphics.clear();
    graphics.fillStyle(0xf7f7f7, 1);
    graphics.fillRect(0, 0, 800, 600);
    graphics.generateTexture('bg', 800, 600);
    
    graphics.destroy();
  }

  create() {
    const { width, height } = this.scale;
    
    // Arri√®re-plan
    this.add.rectangle(width / 2, height / 2, width, height, 0xf7f7f7);
    
    // Titre et instructions am√©lior√©es
    this.add
      .text(width / 2, 30, 'Remets les sc√®nes dans l\'ordre chronologique', {
        fontSize: '24px',
        color: '#1f2937',
        fontFamily: 'Arial, sans-serif',
        fontStyle: 'bold',
      })
      .setOrigin(0.5);
      
    this.add
      .text(width / 2, 55, 'Lis les cartes et place-les dans l\'ordre de l\'histoire  ‚Ä¢  Clique pour voir les d√©tails', {
        fontSize: '14px',
        color: '#6b7280',
        fontFamily: 'Arial, sans-serif',
      })
      .setOrigin(0.5);

    this.add
      .text(width / 2, 70, 'Utilise la logique : que s\'est-il pass√© en premier, en deuxi√®me, etc.', {
        fontSize: '14px',
        color: '#10b981',
        fontFamily: 'Arial, sans-serif',
        fontStyle: 'bold',
      })
      .setOrigin(0.5);

    // Cr√©ation des zones de d√©p√¥t selon la difficult√©
    const slotIndices = Array.from({ length: this.cardCount }, (_, i) => i);
    this.slots = slotIndices.map((i) => {
      const x = 200 + i * 220;
      const y = 280;
      
      // Zone de d√©p√¥t invisible
      const zone = this.add
        .zone(x, y, 180, 240)
        .setRectangleDropZone(180, 240);
      (zone as any).index = i;

      // Bordure visible
      this.add
        .rectangle(x, y, 180, 240)
        .setStrokeStyle(3, 0x6b7280)
        .setFillStyle(0xffffff, 0.1);

      // Num√©ro de l'√©tape avec indication d'ordre
      this.add
        .text(x, y - 140, `√âtape ${i + 1}`, {
          fontSize: '16px',
          color: '#6b7280',
          fontFamily: 'Arial, sans-serif',
          fontStyle: 'bold',
        })
        .setOrigin(0.5);
        
      // Indicateur visuel simple (sans num√©ro)
      this.add.circle(x + 70, y - 120, 8, 0x10b981);

      return zone;
    });

    // Cr√©ation des cartes selon la difficult√© (m√©lang√©es)
    const cardKeys = Array.from({ length: this.cardCount }, (_, i) => `card${i + 1}`);
    const shuffledKeys = [...cardKeys].sort(() => Math.random() - 0.5);

    this.cards = shuffledKeys.map((key, i) => {
      const x = 200 + i * 220;
      const y = 520;

      const container = this.add.container(x, y) as CardContainer;

      // Carte (rectangle color√© si image non disponible)
      const cardImage = this.add.rectangle(0, 0, 180, 240, 0xe5e7eb);
      cardImage.setStrokeStyle(2, 0x9ca3af);

      // Essayer de charger l'image
      if (this.textures.exists(key)) {
        const img = this.add.image(0, 0, key);
        img.setDisplaySize(180, 240);
        container.add(img);
      } else {
        container.add(cardImage);
      }

      const cardNumber = key.replace('card', '');
      const cardIndex = parseInt(cardNumber) - 1;

      // Face avant - Description courte directement visible
      // Utiliser les bonnes donn√©es selon la le√ßon ou les donn√©es par d√©faut
      const displayText = this.shortStorySteps[cardIndex] || `√âtape ${cardNumber}`;
      const frontNumber = this.add
        .text(0, 0, displayText, {
          fontSize: '16px',
          color: '#1f2937',
          fontFamily: 'Arial, sans-serif',
          fontStyle: 'bold',
          align: 'center',
          wordWrap: { width: 160 }
        })
        .setOrigin(0.5);

      container.add(frontNumber);

      // Propri√©t√©s pour la validation
      (container as any).frontNumber = frontNumber;

      container.setSize(180, 240);
      container.setInteractive({
        draggable: true,
        useHandCursor: true,
      });

      this.input.setDraggable(container);
      return container;
    });

    // √âv√©nement de clic pour effet visuel de s√©lection
    this.input.on('pointerdown', (_pointer: any, currentlyOver: any) => {
      if (currentlyOver.length > 0) {
        const clickedObject = currentlyOver[0];
        // V√©rifier si l'objet cliqu√© est une carte
        const card = this.cards.find(c => c === clickedObject.parentContainer || c === clickedObject);
        if (card) {
          // Petit effet visuel pour confirmer la s√©lection
          this.tweens.add({
            targets: card,
            scaleX: 1.1,
            scaleY: 1.1,
            duration: 100,
            yoyo: true,
            ease: 'Power2'
          });
        }
      }
    });

    // √âv√©nements de drag & drop
    this.input.on('dragstart', (_pointer: any, gameObject: CardContainer) => {
      gameObject.setScale(1.05);
      this.children.bringToTop(gameObject);
    });

    this.input.on('drag', (_pointer: any, gameObject: CardContainer, dragX: number, dragY: number) => {
      gameObject.setPosition(dragX, dragY);
    });

    this.input.on('dragend', (_pointer: any, gameObject: CardContainer) => {
      gameObject.setScale(1);
    });

    this.input.on('drop', (_pointer: any, gameObject: CardContainer, dropZone: any) => {
      // V√©rifier si une autre carte occupe d√©j√† cette zone
      const occupant = this.cards.find((card) => card.slotIndex === dropZone.index && card !== gameObject);
      if (occupant) {
        // √âchanger les positions
        const tempX = gameObject.x;
        const tempY = gameObject.y;
        const tempSlot = gameObject.slotIndex;
        
        gameObject.setPosition(dropZone.x, dropZone.y);
        gameObject.slotIndex = dropZone.index;
        
        occupant.setPosition(tempX, tempY);
        occupant.slotIndex = tempSlot;
      } else {
        gameObject.setPosition(dropZone.x, dropZone.y);
        gameObject.slotIndex = dropZone.index;
      }
      
      // V√©rifier si toutes les cartes sont plac√©es pour activer le bouton
      this.updateValidateButton();
    });

    this.input.on('dragenter', (_pointer: any, _gameObject: any, dropZone: any) => {
      dropZone.alpha = 0.5;
    });

    this.input.on('dragleave', (_pointer: any, _gameObject: any, dropZone: any) => {
      dropZone.alpha = 1;
    });

    // Instructions d√©taill√©es (repositionn√©es plus haut)
    this.add
      .text(width / 2, 80, 'Glisse chaque carte vers l\'√©tape correspondante', {
        fontSize: '16px',
        color: '#6b7280',
        fontFamily: 'Arial, sans-serif',
        fontStyle: 'bold',
      })
      .setOrigin(0.5);
      
    this.add
      .text(width / 2, 100, 'Puis clique sur "Valider" pour v√©rifier ton ordre', {
        fontSize: '14px',
        color: '#9ca3af',
        fontFamily: 'Arial, sans-serif',
      })
      .setOrigin(0.5);
    
    // Cr√©er le bouton de validation
    this.createValidateButton();
  }

  private createValidateButton() {
    const { width, height } = this.scale;
    
    // Cr√©er le bouton de validation
    this.validateButton = this.add.container(width / 2, height - 50);
    
    // Fond du bouton
    const buttonBg = this.add.rectangle(0, 0, 200, 50, 0x10B981);
    buttonBg.setStrokeStyle(2, 0x059669);
    
    // Texte du bouton
    const buttonText = this.add.text(0, 0, '‚úÖ Valider', {
      fontSize: '18px',
      color: '#ffffff',
      fontFamily: 'Arial, sans-serif',
      fontStyle: 'bold'
    }).setOrigin(0.5);
    
    this.validateButton.add([buttonBg, buttonText]);
    this.validateButton.setSize(200, 50);
    this.validateButton.setInteractive({ useHandCursor: true });
    
    // √âv√©nement de clic
    this.validateButton.on('pointerdown', () => {
      this.checkWin();
    });
    
    // Effet hover
    this.validateButton.on('pointerover', () => {
      this.validateButton!.setScale(1.05);
    });
    
    this.validateButton.on('pointerout', () => {
      this.validateButton!.setScale(1);
    });
    
    // D√©sactiver le bouton initialement
    this.updateValidateButton();
  }

  private updateValidateButton() {
    if (!this.validateButton) return;
    
    // V√©rifier si toutes les cartes sont plac√©es
    const placedCards = this.cards.filter((card) => card.slotIndex !== undefined);
    const allPlaced = placedCards.length === this.cardCount;
    
    if (allPlaced) {
      // Activer le bouton
      this.validateButton.setAlpha(1);
      this.validateButton.setInteractive({ useHandCursor: true });
      
      // Changer la couleur pour indiquer qu'il est pr√™t
      const buttonBg = this.validateButton.list[0] as Phaser.GameObjects.Rectangle;
      buttonBg.setFillStyle(0x10B981); // Vert
    } else {
      // D√©sactiver le bouton
      this.validateButton.setAlpha(0.5);
      this.validateButton.disableInteractive();
      
      // Changer la couleur pour indiquer qu'il n'est pas pr√™t
      const buttonBg = this.validateButton.list[0] as Phaser.GameObjects.Rectangle;
      buttonBg.setFillStyle(0x6B7280); // Gris
    }
  }

  private checkWin() {
    if (this.gameComplete) return;

    // V√©rifier que toutes les cartes sont plac√©es
    const placedCards = this.cards.filter((card) => card.slotIndex !== undefined);
    if (placedCards.length !== this.cardCount) return;
    
    // D√©sactiver le bouton de validation
    if (this.validateButton) {
      this.validateButton.disableInteractive();
      this.validateButton.setAlpha(0.5);
    }

    // Trier par index de slot et v√©rifier l'ordre
    const sortedCards = placedCards.sort((a, b) => a.slotIndex! - b.slotIndex!);
    const order = sortedCards.map((card) => {
      // R√©cup√©rer le texte de la carte depuis le frontNumber
      const frontNumber = (card as any).frontNumber;
      return frontNumber?.text || '';
    });

    // V√©rifier si l'ordre correspond aux √©tapes chronologiques
    const correctStoryOrder = this.shortStorySteps.slice(0, this.cardCount);
    // Normaliser les textes pour ignorer les diff√©rences de \n
    const normalizedOrder = order.map(text => text.replace(/\n/g, ' ').trim());
    const normalizedCorrect = correctStoryOrder.map(text => text.replace(/\n/g, ' ').trim());
    const isCorrect = normalizedOrder.every((cardText, index) => cardText === normalizedCorrect[index]);
    
    // Debug temporaire pour voir le probl√®me
    console.log('üéØ V√©rification ordre:', {
      'Ordre actuel brut': order,
      'Ordre correct brut': correctStoryOrder,
      'Ordre normalis√©': normalizedOrder,
      'Correct normalis√©': normalizedCorrect,
      'Est correct': isCorrect
    });

    // Afficher le message
    const { width } = this.scale;
    let successMessage = 'Bravo ! Jonas a ob√©i √† Dieu.';
    let badgeName = 'Ami des Proph√®tes';
    
    // Adapter le message selon la le√ßon
    if (this.lessonData && isCorrect) {
      switch (this.lessonData.id) {
        case 'jonas_02_fuite':
          successMessage = 'Bravo ! Tu as reconstitu√© la fuite de Jonas.';
          badgeName = 'Navigateur sage';
          break;
        case 'jonas_03_ninive':
          successMessage = 'Bravo ! Ninive s\'est convertie gr√¢ce √† toi.';
          badgeName = 'Messager de paix';
          break;
        case 'jonas_04_ricin':
          successMessage = 'Bravo ! Tu as compris la le√ßon du ricin.';
          badgeName = 'C≈ìur mis√©ricordieux';
          break;
        case 'daniel_01':
          successMessage = 'Bravo ! Daniel est rest√© fid√®le √† Dieu.';
          badgeName = 'Fid√®le comme Daniel';
          break;
        case 'david_01':
          successMessage = 'Bravo ! David a vaincu le g√©ant avec la foi.';
          badgeName = 'Courage de David';
          break;
        case 'creation_01':
          successMessage = 'Bravo ! Tu as retrac√© la cr√©ation du monde.';
          badgeName = 'T√©moin de la Cr√©ation';
          break;
        case 'josue_01':
          successMessage = 'Bravo ! Les murailles sont tomb√©es par la foi.';
          badgeName = 'Conqu√©rant fid√®le';
          break;
        case 'adam_eve_01':
          successMessage = 'Bravo ! Tu as compris l\'histoire d\'Adam et √àve.';
          badgeName = 'Gardien du Jardin';
          break;
        case 'moise_01':
          successMessage = 'Bravo ! Tu as retrac√© l\'Exode d\'Isra√´l.';
          badgeName = 'Lib√©rateur d\'Isra√´l';
          break;
        case 'noe_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire de No√© et l\'arche.';
          badgeName = 'Navigateur de l\'Alliance';
          break;
        case 'babel_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire de la Tour de Babel.';
          badgeName = 'Ma√Ætre des Langues';
          break;
        case 'abraham_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire d\'Abraham et de l\'alliance.';
          badgeName = 'Fils d\'Abraham';
          break;
        case 'isaac_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire d\'Isaac et Rebecca.';
          badgeName = 'H√©ritier de la Promesse';
          break;
        case 'jacob_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire de Jacob et √âsa√º.';
          badgeName = 'Ma√Ætre de la R√©conciliation';
          break;
        case 'joseph_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire de Joseph en √âgypte.';
          badgeName = 'Ma√Ætre du Pardon';
          break;
        case 'commandements_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire des Dix Commandements.';
          badgeName = 'Gardien de la Loi';
          break;
        case 'gedeon_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire de G√©d√©on et des 300 hommes.';
          badgeName = 'Vaillant H√©ros';
          break;
        case 'moise_buisson_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire de l\'appel de Mo√Øse.';
          badgeName = 'T√©moin de l\'Appel';
          break;
        case 'plaies_egypte_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire des dix plaies d\'√âgypte.';
          badgeName = 'T√©moin de la Puissance';
          break;
        case 'mer_rouge_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire de la travers√©e de la mer Rouge.';
          badgeName = 'T√©moin du Miracle';
          break;
        case 'samson_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire de Samson et Dalila.';
          badgeName = 'T√©moin de la Force';
          break;
        case 'salomon_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire de Salomon et le Temple.';
          badgeName = 'T√©moin de la Sagesse';
          break;
        case 'elie_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire d\'√âlie et les proph√®tes de Baal.';
          badgeName = 'T√©moin du Feu';
          break;
        case 'ezechiel_01':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire d\'√âz√©chiel et les ossements dess√©ch√©s.';
          badgeName = 'T√©moin de la R√©surrection';
          break;
        case 'naissance_jesus':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire de la naissance de J√©sus.';
          badgeName = 'T√©moin de No√´l';
          break;

        case 'enfance_jesus':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire de l\'enfance de J√©sus au temple.';
          badgeName = '√âtudiant du Temple';
          break;

        case 'bapteme_jesus':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire du bapt√™me de J√©sus.';
          badgeName = 'T√©moin du Bapt√™me';
          break;

        case 'tentations_jesus':
          successMessage = 'Bravo ! Tu as reconstitu√© l\'histoire des tentations de J√©sus.';
          badgeName = 'Vainqueur des Tentations';
          break;
        default:
          // Garder le message par d√©faut
          break;
      }
    }
    
    const message = isCorrect 
      ? successMessage 
      : 'Regarde bien l\'histoire, essaie encore.';
    
    const messageColor = isCorrect ? '#10b981' : '#ef4444';
    
    const messageText = this.add
      .text(width / 2, 120, message, {
        fontSize: '24px',
        color: messageColor,
        fontFamily: 'Arial, sans-serif',
        fontStyle: 'bold',
      })
      .setOrigin(0.5)
      .setDepth(10);

    if (isCorrect) {
      this.gameComplete = true;
      
      // Animation de victoire
      this.tweens.add({
        targets: messageText,
        scaleX: 1.2,
        scaleY: 1.2,
        yoyo: true,
        duration: 300,
        ease: 'Back.easeOut',
      });

      // √âmettre l'√©v√©nement de victoire apr√®s un d√©lai
      this.time.delayedCall(1500, () => {
        this.events.emit('lesson:completed', { badge: badgeName });
      });
    } else {
      // Effacer le message d'erreur apr√®s un d√©lai et r√©activer le bouton
      this.time.delayedCall(2000, () => {
        messageText.destroy();
        // R√©activer le bouton pour permettre un nouvel essai
        this.updateValidateButton();
      });
    }
  }

  private createPlaceholderCard(color: number): Phaser.GameObjects.Rectangle {
    return this.add.rectangle(0, 0, 180, 240, color).setStrokeStyle(2, 0x6b7280);
  }

  // Fonction flipCard supprim√©e - plus n√©cessaire car tout le texte est visible
}
